/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var f=Object.create;var h=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,F=Object.prototype.hasOwnProperty;var g=t=>h(t,"__esModule",{value:!0});var w=(t,e)=>{g(t);for(var n in e)h(t,n,{get:e[n],enumerable:!0})},A=(t,e,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of T(e))!F.call(t,i)&&i!=="default"&&h(t,i,{get:()=>e[i],enumerable:!(n=k(e,i))||n.enumerable});return t},x=t=>A(g(h(t!=null?f(b(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);w(exports,{default:()=>d});var s=x(require("obsidian")),d=class extends s.Plugin{async onload(){console.info(this.manifest.name+" Plugin loaded."),this.statusbarAltFile=this.addStatusBarItem(),this.displayAlternateNote(),this.registerEvent(this.app.workspace.on("file-open",()=>{this.displayAlternateNote()})),this.addCommand({id:"alternate-note",name:"Switch to Alternate Note",callback:()=>this.openAlternateNote()}),this.addCommand({id:"cycle-starred-notes",name:"Cycle Bookmarked Notes / Send Selection to Last Bookmark",callback:()=>this.bookmarkCycler()})}async onunload(){console.info(this.manifest.name+" Plugin unloaded.")}getLeaf(){return this.app.workspace.getLeaf()}pathToTFile(e){let n=this.app.vault.getAbstractFileByPath(e);return n instanceof s.TFile?n:null}getNextTFile(e,n){let a=(e.findIndex(l=>l===n)+1)%e.length,c=e[a];return this.pathToTFile(c)}getAlternateNote(){let e=this.app.workspace.getLastOpenFiles();for(let n of e){let i=this.pathToTFile(n);if(i)return i}return null}displayAlternateNote(){let e=30,n=this.getAlternateNote(),i=n?n.basename:"";i.length>e&&(i=i.slice(0,e)+"\u2026"),this.statusbarAltFile.setText(i)}openAlternateNote(){let e=this.getAlternateNote();if(!e){new s.Notice("No valid recent note exists.");return}this.getLeaf().openFile(e)}async bookmarkCycler(){var m,u;let e=(u=(m=this.app.internalPlugins.plugins.bookmarks)==null?void 0:m.instance)==null?void 0:u.getBookmarks();if(!e||e.length===0){new s.Notice("There are no bookmarked files.");return}let n=e.filter(o=>o.type==="file").map(o=>o.path).sort((o,r)=>{let p=this.pathToTFile(o);return this.pathToTFile(r).stat.mtime-p.stat.mtime}),i=app.workspace.getActiveViewOfType(s.MarkdownView),a=i?i.editor:null,c=a?i.getState().mode:null,l="";if(c==="preview"?l=activeWindow.getSelection().toString():a&&c==="source"&&(l=a.getSelection()),l===""){let o=this.getLeaf(),r=this.app.workspace.getActiveFile().path,p=this.getNextTFile(n,r);if(p.path===r){new s.Notice("Already at the sole starred file.");return}o.openFile(p)}else{if((a?a.listSelections().length:0)>1){new s.Notice("Multiple Selections are not supported.");return}let r=this.pathToTFile(n[0]);await this.app.vault.append(r,l+`
`),new s.Notice(`Appended to "${r.basename}":

"${l}"`)}}};
